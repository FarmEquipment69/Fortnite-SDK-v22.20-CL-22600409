// BlueprintGeneratedClass AbilityFunctions.AbilityFunctions_C
// Size: 0x28 (Inherited: 0x28)
struct UAbilityFunctions_C : UBlueprintFunctionLibrary {

	void ApplySlowFall(double SlowFallDuration, struct UFortGameplayAbility* SelfGameplayAbilityReference, struct UGameplayEffect* GameplayEffect, struct UObject* __WorldContext, struct FActiveGameplayEffectHandle& EffectSpecHandle); // Function AbilityFunctions.AbilityFunctions_C.ApplySlowFall // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetDistanceSquaredBetweenActors(struct AActor* Actor 1, struct AActor* Actor 2, struct UObject* __WorldContext, double& Distance Squared); // Function AbilityFunctions.AbilityFunctions_C.GetDistanceSquaredBetweenActors // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetDistanceBetweenActors(struct AActor* Actor1, struct AActor* Actor2, struct UObject* __WorldContext, double& Distance); // Function AbilityFunctions.AbilityFunctions_C.GetDistanceBetweenActors // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetPawnFromPlayerStateZone(struct AActor* InActor, struct UObject* __WorldContext, struct AFortPlayerPawn*& OutPawn, bool& PawnReturned); // Function AbilityFunctions.AbilityFunctions_C.GetPawnFromPlayerStateZone // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void EvaluatePerkTierBalanceValue(struct FScalableFloat T01 Balance Value, struct FScalableFloat T02 Balance Value, bool Owns T02, bool Should Override T01, struct UObject* __WorldContext, struct FScalableFloat& Balance Value); // Function AbilityFunctions.AbilityFunctions_C.EvaluatePerkTierBalanceValue // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetRangeFromGameplayEffectContainer(struct FFortGameplayEffectContainer GE Container, int32_t Target Selection List Index, double At Level, struct UObject* __WorldContext, double& Range); // Function AbilityFunctions.AbilityFunctions_C.GetRangeFromGameplayEffectContainer // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetTotalGameplayEffectCount(struct TArray<struct UGameplayEffect*>& EffectsToCount, struct UAbilitySystemComponent* AbilitySystemComponent, struct UObject* __WorldContext, int32_t& FinalEffectCount); // Function AbilityFunctions.AbilityFunctions_C.GetTotalGameplayEffectCount // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetAngleBetweenTwoVectors(struct FVector VectorA, struct FVector VectorB, struct UObject* __WorldContext, double& Angle (Degrees)); // Function AbilityFunctions.AbilityFunctions_C.GetAngleBetweenTwoVectors // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetRangeFromGameplayEffectContainerSpec(struct FFortGameplayEffectContainerSpec GE Container Spec, int32_t Target Selection List Index, double At Level, struct UObject* __WorldContext, double& Range); // Function AbilityFunctions.AbilityFunctions_C.GetRangeFromGameplayEffectContainerSpec // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void GetProjectedTeleportLocation(struct AActor* Actor, double MovementDistance, struct UObject* __WorldContext, struct FVector& TargetLocation); // Function AbilityFunctions.AbilityFunctions_C.GetProjectedTeleportLocation // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	bool ShouldSwordHitsHealRespondToEvent(struct FGameplayEventData Payload, struct UObject* __WorldContext); // Function AbilityFunctions.AbilityFunctions_C.ShouldSwordHitsHealRespondToEvent // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	bool ShouldHammerHitsHealRespondToEvent(struct FGameplayEventData Payload, struct UObject* __WorldContext); // Function AbilityFunctions.AbilityFunctions_C.ShouldHammerHitsHealRespondToEvent // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void ConvertRangeToTiles(double InRange, struct UObject* __WorldContext, double& OutTile); // Function AbilityFunctions.AbilityFunctions_C.ConvertRangeToTiles // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void SetArrayOfHitActors(struct FGameplayAbilityTargetDataHandle TargetData, struct TArray<struct AActor*>& ArrayToSet, struct UObject* __WorldContext); // Function AbilityFunctions.AbilityFunctions_C.SetArrayOfHitActors // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DoNOTUse-BuildArrayOfHitActors(struct FGameplayAbilityTargetDataHandle TargetData, struct UObject* __WorldContext, struct TArray<struct AActor*>& HitActors); // Function AbilityFunctions.AbilityFunctions_C.DoNOTUse-BuildArrayOfHitActors // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
};

