// ScriptStruct Player_Jump_AnimBP.Player_Jump_AnimBP_C.AnimBlueprintGeneratedConstantData
// Size: 0x2a8 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct FName ; // 0x08(0x04)
	struct FName ; // 0x0c(0x04)
	struct UAnimSequenceBase* ; // 0x10(0x08)
	struct UAnimSequenceBase* ; // 0x18(0x08)
	struct UAnimSequenceBase* ; // 0x20(0x08)
	struct FName ; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UAnimSequenceBase* ; // 0x30(0x08)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	float ; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UAnimSequenceBase* ; // 0x48(0x08)
	struct FName ; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct TArray<float> ; // 0x58(0x10)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct TArray<float> ; // 0x70(0x10)
	struct UAnimSequenceBase* ; // 0x80(0x08)
	struct TArray<float> ; // 0x88(0x10)
	struct UAnimSequenceBase* ; // 0x98(0x08)
	enum class EBlendListTransitionType ; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct TArray<float> ; // 0xa8(0x10)
	struct TArray<int32_t> ; // 0xb8(0x10)
	struct FName ; // 0xc8(0x04)
	struct FName ; // 0xcc(0x04)
	struct FName ; // 0xd0(0x04)
	struct FName ; // 0xd4(0x04)
	struct FName ; // 0xd8(0x04)
	struct FName ; // 0xdc(0x04)
	struct FName ; // 0xe0(0x04)
	struct FName ; // 0xe4(0x04)
	struct FName ; // 0xe8(0x04)
	struct FName ; // 0xec(0x04)
	struct FName ; // 0xf0(0x04)
	struct FName ; // 0xf4(0x04)
	struct FName ; // 0xf8(0x04)
	struct FName ; // 0xfc(0x04)
	struct FName ; // 0x100(0x04)
	struct FName ; // 0x104(0x04)
	struct FName ; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct UAnimSequenceBase* ; // 0x110(0x08)
	struct UAnimSequenceBase* ; // 0x118(0x08)
	struct UAnimSequenceBase* ; // 0x120(0x08)
	struct UAnimSequenceBase* ; // 0x128(0x08)
	struct FName ; // 0x130(0x04)
	int32_t ; // 0x134(0x04)
	struct UAnimSequenceBase* ; // 0x138(0x08)
	struct FName ; // 0x140(0x04)
	int32_t ; // 0x144(0x04)
	struct UAnimSequenceBase* ; // 0x148(0x08)
	struct FName ; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct UBlendSpace* ; // 0x158(0x08)
	struct UBlendProfile* ; // 0x160(0x08)
	struct UCurveFloat* ; // 0x168(0x08)
	enum class EAlphaBlendOption ; // 0x170(0x01)
	enum class EBlendListTransitionType ; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)
	struct TArray<float> ; // 0x178(0x10)
	bool ; // 0x188(0x01)
	char pad_189[0x7]; // 0x189(0x07)
	struct UAnimSequenceBase* ; // 0x190(0x08)
	struct FName ; // 0x198(0x04)
	int32_t ; // 0x19c(0x04)
	float ; // 0x1a0(0x04)
	struct FInputScaleBiasClampConstants ; // 0x1a4(0x2c)
	float ; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct UAnimSequenceBase* ; // 0x1d8(0x08)
	bool ; // 0x1e0(0x01)
	enum class EAnimSyncMethod ; // 0x1e1(0x01)
	enum class EAnimGroupRole ; // 0x1e2(0x01)
	char pad_1E3[0x1]; // 0x1e3(0x01)
	struct FName ; // 0x1e4(0x04)
	struct FName ; // 0x1e8(0x04)
	int32_t ; // 0x1ec(0x04)
	struct FAnimNodeFunctionRef ; // 0x1f0(0x18)
	enum class ERefPoseType ; // 0x208(0x01)
	char pad_209[0x7]; // 0x209(0x07)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x210(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x290(0x18)
};

// ScriptStruct Player_Jump_AnimBP.Player_Jump_AnimBP_C.AnimBlueprintGeneratedMutableData
// Size: 0x99 (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	bool __BoolProperty; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct UAnimSequenceBase* ; // 0x08(0x08)
	struct TArray<float> ; // 0x10(0x10)
	bool ; // 0x20(0x01)
	bool ; // 0x21(0x01)
	bool ; // 0x22(0x01)
	char ; // 0x23(0x01)
	bool ; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	struct TArray<float> ; // 0x30(0x10)
	bool ; // 0x40(0x01)
	bool ; // 0x41(0x01)
	bool ; // 0x42(0x01)
	char ; // 0x43(0x01)
	float ; // 0x44(0x04)
	struct UAnimSequenceBase* ; // 0x48(0x08)
	bool ; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float ; // 0x54(0x04)
	float ; // 0x58(0x04)
	bool ; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	float ; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct TArray<float> ; // 0x68(0x10)
	bool ; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float ; // 0x7c(0x04)
	bool ; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float ; // 0x84(0x04)
	bool ; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float ; // 0x8c(0x04)
	char ; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float ; // 0x94(0x04)
	bool ; // 0x98(0x01)
};

