// BlueprintGeneratedClass MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C
// Size: 0x28 (Inherited: 0x28)
struct UMissionBlueprintFunctionLibrary_C : UBlueprintFunctionLibrary {

	void Any Player Pawn Near Location(double DistanceToCheck, struct FVector Location, struct TArray<struct AFortPlayerPawn*>& Ignore Player Pawns, struct UObject* __WorldContext, bool& IsPawnNearLocation, struct TArray<struct AFortPawn*>& PawnsNearLocation); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.Any Player Pawn Near Location // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetSeasonalEventManager(struct UObject* WorldContextObject, struct UObject* __WorldContext, struct UFortSeasonalEventManager*& SeasonalEventManager); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetSeasonalEventManager // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0xd67374
	void NPC_CanBeElemental(struct FGameplayTag PawnTag, struct UObject* __WorldContext, bool& Value); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.NPC_CanBeElemental // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void LaunchHoverboard(struct AActor* HoverboardActor, struct FVector LaunchVelocity, struct FName ForceFeedbackTag, struct UObject* __WorldContext, bool& Success); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.LaunchHoverboard // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void NPC_ConvertTagToNameText(struct FGameplayTag PawnTag, struct UObject* __WorldContext, struct FText& Name); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.NPC_ConvertTagToNameText // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void CheckBasicVectorToActorLineOfSight(struct FVector Vector A, struct AActor* Actor B, struct FVector Actor B Location Offset, enum class ETraceTypeQuery TraceChannel, enum class EDrawDebugTrace DrawDebugType, double DrawTime, struct TArray<struct AActor*>& ActorsToIgnore, bool bTraceComplex, bool RequireThatTraceHitActorB, struct UObject* __WorldContext, bool& In Line Of Sight, double& Distance); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.CheckBasicVectorToActorLineOfSight // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void CheckBasicActorLineOfSight(struct AActor* Actor A, struct FVector ActorA Location Offset, struct AActor* Actor B, struct FVector Actor B Location Offset, bool UseActorHalfHeightForSight, enum class ETraceTypeQuery TraceChannel, enum class EDrawDebugTrace DrawDebugType, double DrawTime, bool bTraceComplex, struct UObject* __WorldContext, bool& In Line Of Sight, double& Distance); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.CheckBasicActorLineOfSight // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void NPC_LockThenRotateInPlace(bool LockedInPlace, struct AFortPlayerPawn* PlayerPawn, struct AFortAIPawn* SurvivorPawn, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.NPC_LockThenRotateInPlace // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetControllersNearActorThatRequireQuestObjective(double Distance, struct AActor* Actor, struct UFortQuestItemDefinition* Quest Item, struct FName Quest Item Backend Objective Name, struct UObject* __WorldContext, struct TArray<struct AFortPlayerController*>& PlayerControllersNearbyThatRequireQuest, bool& SuccessfullyFoundPlayer); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetControllersNearActorThatRequireQuestObjective // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HaveAllPlayersCompletedQuest(struct UFortQuestItemDefinition* QuestItem, struct UObject* __WorldContext, bool& AllPlayersCompletedQuest); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HaveAllPlayersCompletedQuest // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HasPlayerCompletedQuestObjectiveHandle(struct AFortPlayerController* PlayerController, struct UFortQuestItemDefinition* QuestReference, struct FDataTableRowHandle QuestBackendObjectiveHandle, struct UObject* __WorldContext, struct AFortPlayerController*& PlayerControllerOut, bool& CompletedQuestObjective); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HasPlayerCompletedQuestObjectiveHandle // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DoesAnyPlayerRequireQuestObjective(struct UFortQuestItemDefinition* QuestReference, struct FDataTableRowHandle QuestObjectiveHandle, struct UObject* __WorldContext, struct TArray<struct AFortPlayerController*>& PlayerControllersWhoRequireObjective, bool& SomebodyRequiresObjective); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.DoesAnyPlayerRequireQuestObjective // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HideParticleComponentsAttachedToMesh(struct UStaticMeshComponent* MeshComponent, struct UObject* __WorldContext, bool& SuccessfullyDeactivatedParticle); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HideParticleComponentsAttachedToMesh // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HasPlayerCompletedQuestObjective(struct AFortPlayerController* PlayerController, struct UFortQuestItemDefinition* QuestReference, struct FName QuestBackendObjectiveName, struct UObject* __WorldContext, struct AFortPlayerController*& PlayerControllerOut, bool& CompletedQuestObjective); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HasPlayerCompletedQuestObjective // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetContributingControllersNearActor(double Distance, struct AActor* Actor, struct UObject* __WorldContext, struct TArray<struct AFortPlayerController*>& PlayerControllersNearby, bool& SuccessfullyFoundPlayer); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetContributingControllersNearActor // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void PointLocationsBetweenTwoVectors(struct FVector Vector 1, struct FVector Vector 2, int32_t HowManyPoints, struct UObject* __WorldContext, struct TArray<struct FVector>& VectorPoints, bool& SuccessfullyFoundPoints); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.PointLocationsBetweenTwoVectors // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetCurrentDifficulty(struct UObject* __WorldContext, double& Difficulty, bool& Success); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetCurrentDifficulty // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void ApplyDifficultyOffset(struct FName RowName, double BaseDifficulty, struct UObject* __WorldContext, bool& Success); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.ApplyDifficultyOffset // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DistanceBetweenTwoVectors(struct FVector vector1, struct FVector vector2, struct UObject* __WorldContext, double& Distance); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.DistanceBetweenTwoVectors // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HasPlayerCompletedQuest(struct AFortPlayerController* PlayerController, struct UFortQuestItemDefinition* QuestReference, struct FName QuestBackendName, struct UObject* __WorldContext, struct AFortPlayerController*& PlayerControllerOut, bool& CompletedQuest); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HasPlayerCompletedQuest // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void SeperatePlayersWhoNeedQuest(struct UFortQuestItemDefinition* QuestItemReference, struct FName QuestObjectiveBackendName, struct UObject* __WorldContext, struct TArray<struct AFortPlayerController*>& PlayersWhoNeedQuest, struct TArray<struct AFortPlayerController*>& PlayersWhoDoNotNeedQuest); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.SeperatePlayersWhoNeedQuest // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void BasicBuildingItemDrop(enum class EnumEventWorldItemDrop Item Drop Level, struct FVector LootDropLocation, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.BasicBuildingItemDrop // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetBuildingRecommendation(struct FName RowName, struct UObject* __WorldContext, int32_t& BuildingCount, bool& RowFound); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetBuildingRecommendation // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void Random_360_VectorInRange(double MinDistance, double MaxDistance, struct UObject* __WorldContext, struct FVector& Random Vector Result ); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.Random_360_VectorInRange // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void AnyPawnNearActor(double DistanceToCheck, struct AActor* Actor, struct UObject* __WorldContext, bool& IsPawnNearActor, struct TArray<struct AFortPawn*>& PawnsNearActor); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.AnyPawnNearActor // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GiveQuestUpdateToPlayers(struct UFortQuestItemDefinition* Quest Reference, struct FName Quest Objective Backend Name, struct FDataTableRowHandle ObjectiveStatEvent, struct TArray<struct AFortPlayerController*>& PlayerControllersForUpdate, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GiveQuestUpdateToPlayers // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DropChance(double DropPercentChance, struct UObject* __WorldContext, bool& DropResult); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.DropChance // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void AnyPlayerNearActor(double DistanceToCheck, struct AActor* Actor, struct UObject* __WorldContext, bool& IsPlayerNearActor, struct TArray<struct AFortPlayerPawn*>& PlayersNearActor); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.AnyPlayerNearActor // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void FlashObjectiveUI(struct AFortObjectiveBase* Objective Reference, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.FlashObjectiveUI // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void NPC_DroneStopRescue(struct AActor* Actor, struct AActor* Instigator, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.NPC_DroneStopRescue // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void NPC_DroneStartRescue(struct AActor* Actor, struct AActor* Instigator, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.NPC_DroneStartRescue // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void ListPlayersWhoNeedQuest(struct UFortQuestItemDefinition* Quest Reference, struct FName Quest Backend Name, struct UObject* __WorldContext, struct TArray<struct AFortPlayerController*>& Player Controllers Who Require The Quest, bool& DoesAnyoneRequireTheQuest); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.ListPlayersWhoNeedQuest // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DoesAnyoneRequireQuest(struct UFortQuestItemDefinition* QuestReference, struct FName Quest Backend Name, struct UObject* __WorldContext, bool& SomePlayerNeedsTheQuest); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.DoesAnyoneRequireQuest // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void QuestObjectiveCountAchieved(struct AFortPlayerController* PlayerControllerReference, struct UFortQuestItemDefinition* Quest Item Reference, struct FDataTableRowHandle ObjectiveStatHandle, struct UObject* __WorldContext, int32_t& Quest Count Achieved, int32_t& Quest Count Required, bool& SuccessfullyFoundCount); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.QuestObjectiveCountAchieved // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void HighlightQuestActor(struct AActor* ActorToHighlight, bool HighlightEnabled, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.HighlightQuestActor // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void DoesPlayerHaveQuest(struct AFortPlayerController* PlayerController, struct UFortQuestItemDefinition* Quest Item Reference, struct FName Quest Item Objective Backend Name, struct UObject* __WorldContext, bool& QuestValid, struct AFortPlayerController*& PlayerControllerRef); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.DoesPlayerHaveQuest // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void GetObjectiveBadgeIconBrush(struct AFortObjectiveBase* Objective, struct FGameplayTag RewardTag, struct UObject* __WorldContext, struct FSlateBrush& IconBrush); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.GetObjectiveBadgeIconBrush // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void UnRegisterUI UpdatesWithDamageEvents(struct AActor* ActorToUnRegisterWith, struct AFortMissionState* MissionState, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.UnRegisterUI UpdatesWithDamageEvents // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
	void RegisterUI UpdatesWithDamageEvents(struct AActor* ActorToRegisterWith, struct AFortMissionState* MissionState, struct UObject* __WorldContext); // Function MissionBlueprintFunctionLibrary.MissionBlueprintFunctionLibrary_C.RegisterUI UpdatesWithDamageEvents // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd67374
};

