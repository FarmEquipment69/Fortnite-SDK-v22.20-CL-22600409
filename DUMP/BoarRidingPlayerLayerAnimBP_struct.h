// ScriptStruct BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.AnimBlueprintGeneratedConstantData
// Size: 0x410 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct UBlendSpace* ; // 0x08(0x08)
	struct FName ; // 0x10(0x04)
	char pad_14[0x4]; // 0x14(0x04)
	struct UBlendProfile* ; // 0x18(0x08)
	struct UAnimSequenceBase* ; // 0x20(0x08)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	struct UAnimSequenceBase* ; // 0x30(0x08)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	struct UAnimSequenceBase* ; // 0x40(0x08)
	struct UAnimSequenceBase* ; // 0x48(0x08)
	struct UAnimSequenceBase* ; // 0x50(0x08)
	struct UAnimSequenceBase* ; // 0x58(0x08)
	struct UBlendSpace* ; // 0x60(0x08)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct UAnimSequenceBase* ; // 0x78(0x08)
	struct UAnimSequenceBase* ; // 0x80(0x08)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	struct UAnimSequenceBase* ; // 0x98(0x08)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	struct UAnimSequenceBase* ; // 0xa8(0x08)
	struct UAnimSequenceBase* ; // 0xb0(0x08)
	struct UAnimSequenceBase* ; // 0xb8(0x08)
	struct FName ; // 0xc0(0x04)
	struct FName ; // 0xc4(0x04)
	struct UBlendSpace* ; // 0xc8(0x08)
	struct UAnimSequenceBase* ; // 0xd0(0x08)
	struct UAnimSequenceBase* ; // 0xd8(0x08)
	struct UBlendSpace* ; // 0xe0(0x08)
	struct UAnimSequenceBase* ; // 0xe8(0x08)
	struct UBlendSpace* ; // 0xf0(0x08)
	struct FName ; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UBlendSpace* ; // 0x100(0x08)
	struct FName ; // 0x108(0x04)
	struct FName ; // 0x10c(0x04)
	struct UBlendSpace* ; // 0x110(0x08)
	struct UBlendSpace* ; // 0x118(0x08)
	struct UAnimSequenceBase* ; // 0x120(0x08)
	struct UAnimSequenceBase* ; // 0x128(0x08)
	struct FName ; // 0x130(0x04)
	int32_t ; // 0x134(0x04)
	struct UAnimSequenceBase* ; // 0x138(0x08)
	struct UAnimSequenceBase* ; // 0x140(0x08)
	struct TArray<float> ; // 0x148(0x10)
	struct FName ; // 0x158(0x04)
	int32_t ; // 0x15c(0x04)
	struct UAnimSequenceBase* ; // 0x160(0x08)
	struct FName ; // 0x168(0x04)
	int32_t ; // 0x16c(0x04)
	struct UAnimSequenceBase* ; // 0x170(0x08)
	struct UAnimSequenceBase* ; // 0x178(0x08)
	struct FName ; // 0x180(0x04)
	int32_t ; // 0x184(0x04)
	struct UAnimSequenceBase* ; // 0x188(0x08)
	struct FName ; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UAnimSequenceBase* ; // 0x198(0x08)
	struct FName ; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct UAnimSequenceBase* ; // 0x1a8(0x08)
	struct FName ; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct UAnimSequenceBase* ; // 0x1b8(0x08)
	struct FName ; // 0x1c0(0x04)
	struct FName ; // 0x1c4(0x04)
	struct UAnimSequenceBase* ; // 0x1c8(0x08)
	struct FName ; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct UAnimSequenceBase* ; // 0x1d8(0x08)
	struct FName ; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)
	struct UAnimSequenceBase* ; // 0x1e8(0x08)
	struct FName ; // 0x1f0(0x04)
	struct FName ; // 0x1f4(0x04)
	int32_t ; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct UAnimSequenceBase* ; // 0x200(0x08)
	struct FName ; // 0x208(0x04)
	char pad_20C[0x4]; // 0x20c(0x04)
	struct UAnimSequenceBase* ; // 0x210(0x08)
	enum class EBlendListTransitionType ; // 0x218(0x01)
	char pad_219[0x7]; // 0x219(0x07)
	struct TArray<float> ; // 0x220(0x10)
	struct UAnimSequenceBase* ; // 0x230(0x08)
	struct UAnimSequenceBase* ; // 0x238(0x08)
	struct TArray<float> ; // 0x240(0x10)
	struct FName ; // 0x250(0x04)
	int32_t ; // 0x254(0x04)
	struct UAnimSequenceBase* ; // 0x258(0x08)
	struct FName ; // 0x260(0x04)
	int32_t ; // 0x264(0x04)
	struct UAnimSequenceBase* ; // 0x268(0x08)
	struct TArray<float> ; // 0x270(0x10)
	struct UAnimSequenceBase* ; // 0x280(0x08)
	struct UBlendSpace* ; // 0x288(0x08)
	enum class EAnimSyncMethod ; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	struct FName ; // 0x294(0x04)
	struct FName ; // 0x298(0x04)
	struct FInputScaleBiasClampConstants ; // 0x29c(0x2c)
	struct UAnimSequenceBase* ; // 0x2c8(0x08)
	struct FName ; // 0x2d0(0x04)
	int32_t ; // 0x2d4(0x04)
	struct FName ; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct UBlendSpace* ; // 0x2e0(0x08)
	struct UBlendSpace* ; // 0x2e8(0x08)
	enum class ERefPoseType ; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct UBlendSpace* ; // 0x2f8(0x08)
	struct UBlendSpace* ; // 0x300(0x08)
	bool ; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	float ; // 0x30c(0x04)
	float ; // 0x310(0x04)
	enum class EAnimSyncMethod ; // 0x314(0x01)
	enum class EAnimGroupRole ; // 0x315(0x01)
	char pad_316[0x2]; // 0x316(0x02)
	struct UBlendProfile* ; // 0x318(0x08)
	struct UCurveFloat* ; // 0x320(0x08)
	bool ; // 0x328(0x01)
	enum class EAlphaBlendOption ; // 0x329(0x01)
	enum class EBlendListTransitionType ; // 0x32a(0x01)
	char pad_32B[0x5]; // 0x32b(0x05)
	struct TArray<float> ; // 0x330(0x10)
	struct FName ; // 0x340(0x04)
	int32_t ; // 0x344(0x04)
	struct FName ; // 0x348(0x04)
	struct FName ; // 0x34c(0x04)
	struct FName ; // 0x350(0x04)
	struct FName ; // 0x354(0x04)
	struct FAnimNodeFunctionRef ; // 0x358(0x18)
	struct FName ; // 0x370(0x04)
	struct FName ; // 0x374(0x04)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x378(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x3f8(0x18)
};

// ScriptStruct BoarRidingPlayerLayerAnimBP.BoarRidingPlayerLayerAnimBP_C.AnimBlueprintGeneratedMutableData
// Size: 0x8d (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	char pad_1[0x3]; // 0x01(0x03)
	float __FloatProperty; // 0x04(0x04)
	float ; // 0x08(0x04)
	char pad_C[0x4]; // 0x0c(0x04)
	struct TArray<float> ; // 0x10(0x10)
	bool ; // 0x20(0x01)
	bool ; // 0x21(0x01)
	bool ; // 0x22(0x01)
	bool ; // 0x23(0x01)
	bool ; // 0x24(0x01)
	char pad_25[0x3]; // 0x25(0x03)
	float ; // 0x28(0x04)
	float ; // 0x2c(0x04)
	bool ; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float ; // 0x34(0x04)
	float ; // 0x38(0x04)
	float ; // 0x3c(0x04)
	float ; // 0x40(0x04)
	bool ; // 0x44(0x01)
	bool ; // 0x45(0x01)
	char pad_46[0x2]; // 0x46(0x02)
	float ; // 0x48(0x04)
	float ; // 0x4c(0x04)
	float ; // 0x50(0x04)
	float ; // 0x54(0x04)
	float ; // 0x58(0x04)
	float ; // 0x5c(0x04)
	bool ; // 0x60(0x01)
	bool ; // 0x61(0x01)
	bool ; // 0x62(0x01)
	bool ; // 0x63(0x01)
	bool ; // 0x64(0x01)
	bool ; // 0x65(0x01)
	char pad_66[0x2]; // 0x66(0x02)
	float ; // 0x68(0x04)
	float ; // 0x6c(0x04)
	float ; // 0x70(0x04)
	bool ; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float ; // 0x78(0x04)
	float ; // 0x7c(0x04)
	bool ; // 0x80(0x01)
	bool ; // 0x81(0x01)
	char pad_82[0x2]; // 0x82(0x02)
	float ; // 0x84(0x04)
	float ; // 0x88(0x04)
	bool ; // 0x8c(0x01)
};

