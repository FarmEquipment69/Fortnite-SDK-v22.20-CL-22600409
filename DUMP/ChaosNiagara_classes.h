// Class ChaosNiagara.NiagaraDataInterfaceChaosDestruction
// Size: 0x348 (Inherited: 0x38)
struct UNiagaraDataInterfaceChaosDestruction : UNiagaraDataInterface {
	struct TSet<struct AChaosSolverActor*> ChaosSolverActorSet; // 0x38(0x50)
	enum class EDataSourceTypeEnum DataSourceType; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	int32_t DataProcessFrequency; // 0x8c(0x04)
	int32_t MaxNumberOfDataEntriesToSpawn; // 0x90(0x04)
	bool DoSpawn; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	struct FVector2D SpawnMultiplierMinMax; // 0x98(0x10)
	float SpawnChance; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct FVector2D ImpulseToSpawnMinMax; // 0xb0(0x10)
	struct FVector2D SpeedToSpawnMinMax; // 0xc0(0x10)
	struct FVector2D MassToSpawnMinMax; // 0xd0(0x10)
	struct FVector2D ExtentMinToSpawnMinMax; // 0xe0(0x10)
	struct FVector2D ExtentMaxToSpawnMinMax; // 0xf0(0x10)
	struct FVector2D VolumeToSpawnMinMax; // 0x100(0x10)
	struct FVector2D SolverTimeToSpawnMinMax; // 0x110(0x10)
	int32_t SurfaceTypeToSpawn; // 0x120(0x04)
	enum class ELocationFilteringModeEnum LocationFilteringMode; // 0x124(0x01)
	enum class ELocationXToSpawnEnum LocationXToSpawn; // 0x125(0x01)
	char pad_126[0x2]; // 0x126(0x02)
	struct FVector2D LocationXToSpawnMinMax; // 0x128(0x10)
	enum class ELocationYToSpawnEnum LocationYToSpawn; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct FVector2D LocationYToSpawnMinMax; // 0x140(0x10)
	enum class ELocationZToSpawnEnum LocationZToSpawn; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
	struct FVector2D LocationZToSpawnMinMax; // 0x158(0x10)
	float TrailMinSpeedToSpawn; // 0x168(0x04)
	enum class EDataSortTypeEnum DataSortingType; // 0x16c(0x01)
	bool bGetExternalCollisionData; // 0x16d(0x01)
	bool DoSpatialHash; // 0x16e(0x01)
	char pad_16F[0x1]; // 0x16f(0x01)
	struct FVector SpatialHashVolumeMin; // 0x170(0x18)
	struct FVector SpatialHashVolumeMax; // 0x188(0x18)
	struct FVector SpatialHashVolumeCellSize; // 0x1a0(0x18)
	int32_t MaxDataPerCell; // 0x1b8(0x04)
	bool bApplyMaterialsFilter; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
	struct TSet<struct UPhysicalMaterial*> ChaosBreakingMaterialSet; // 0x1c0(0x50)
	bool bGetExternalBreakingData; // 0x210(0x01)
	bool bGetExternalTrailingData; // 0x211(0x01)
	char pad_212[0x6]; // 0x212(0x06)
	struct FVector2D RandomPositionMagnitudeMinMax; // 0x218(0x10)
	float InheritedVelocityMultiplier; // 0x228(0x04)
	enum class ERandomVelocityGenerationTypeEnum RandomVelocityGenerationType; // 0x22c(0x01)
	char pad_22D[0x3]; // 0x22d(0x03)
	struct FVector2D RandomVelocityMagnitudeMinMax; // 0x230(0x10)
	float SpreadAngleMax; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct FVector VelocityOffsetMin; // 0x248(0x18)
	struct FVector VelocityOffsetMax; // 0x260(0x18)
	struct FVector2D FinalVelocityMagnitudeMinMax; // 0x278(0x10)
	float MaxLatency; // 0x288(0x04)
	enum class EDebugTypeEnum DebugType; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
	int32_t LastSpawnedPointID; // 0x290(0x04)
	float LastSpawnTime; // 0x294(0x04)
	char pad_298[0x10]; // 0x298(0x10)
	float SolverTime; // 0x2a8(0x04)
	float TimeStampOfLastProcessedData; // 0x2ac(0x04)
	char pad_2B0[0x98]; // 0x2b0(0x98)
};

// Class ChaosNiagara.NiagaraDataInterfaceGeometryCollection
// Size: 0x40 (Inherited: 0x38)
struct UNiagaraDataInterfaceGeometryCollection : UNiagaraDataInterface {
	struct AGeometryCollectionActor* GeometryCollectionActor; // 0x38(0x08)
};

// Class ChaosNiagara.NiagaraDataInterfacePhysicsField
// Size: 0x38 (Inherited: 0x38)
struct UNiagaraDataInterfacePhysicsField : UNiagaraDataInterface {
};

