// ScriptStruct Fortnite_M_Avg_Player_ZipLine_AnimBlueprint.Fortnite_M_Avg_Player_ZipLine_AnimBlueprint_C.AnimBlueprintGeneratedConstantData
// Size: 0x270 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct FName ; // 0x08(0x04)
	struct FName ; // 0x0c(0x04)
	struct FName ; // 0x10(0x04)
	struct FName ; // 0x14(0x04)
	struct FName ; // 0x18(0x04)
	struct FName ; // 0x1c(0x04)
	struct FName ; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	struct UAnimSequenceBase* ; // 0x30(0x08)
	struct FName ; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TArray<float> ; // 0x40(0x10)
	struct UAnimSequenceBase* ; // 0x50(0x08)
	struct UAnimSequenceBase* ; // 0x58(0x08)
	struct TArray<float> ; // 0x60(0x10)
	struct TArray<int32_t> ; // 0x70(0x10)
	struct FName ; // 0x80(0x04)
	struct FName ; // 0x84(0x04)
	struct FName ; // 0x88(0x04)
	struct FName ; // 0x8c(0x04)
	struct FName ; // 0x90(0x04)
	struct FName ; // 0x94(0x04)
	struct FName ; // 0x98(0x04)
	struct FName ; // 0x9c(0x04)
	struct FName ; // 0xa0(0x04)
	struct FName ; // 0xa4(0x04)
	struct FName ; // 0xa8(0x04)
	struct FName ; // 0xac(0x04)
	struct FName ; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<float> ; // 0xb8(0x10)
	struct UAnimSequenceBase* ; // 0xc8(0x08)
	struct UAnimSequenceBase* ; // 0xd0(0x08)
	struct UAnimSequenceBase* ; // 0xd8(0x08)
	struct UAnimSequenceBase* ; // 0xe0(0x08)
	struct UAnimSequenceBase* ; // 0xe8(0x08)
	struct FName ; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct UAnimSequenceBase* ; // 0xf8(0x08)
	struct FName ; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct UAnimSequenceBase* ; // 0x108(0x08)
	struct FName ; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UAnimSequenceBase* ; // 0x118(0x08)
	enum class EAnimSyncMethod ; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	struct FName ; // 0x124(0x04)
	struct UBlendProfile* ; // 0x128(0x08)
	struct UCurveFloat* ; // 0x130(0x08)
	enum class EAlphaBlendOption ; // 0x138(0x01)
	enum class EBlendListTransitionType ; // 0x139(0x01)
	char pad_13A[0x6]; // 0x13a(0x06)
	struct TArray<int32_t> ; // 0x140(0x10)
	struct FName ; // 0x150(0x04)
	int32_t ; // 0x154(0x04)
	struct FInputScaleBiasClampConstants ; // 0x158(0x2c)
	char pad_184[0x4]; // 0x184(0x04)
	struct UAnimSequenceBase* ; // 0x188(0x08)
	bool ; // 0x190(0x01)
	char pad_191[0x3]; // 0x191(0x03)
	struct FName ; // 0x194(0x04)
	int32_t ; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UBlendSpace* ; // 0x1a0(0x08)
	float ; // 0x1a8(0x04)
	float ; // 0x1ac(0x04)
	bool ; // 0x1b0(0x01)
	enum class EAnimSyncMethod ; // 0x1b1(0x01)
	enum class EAnimGroupRole ; // 0x1b2(0x01)
	char pad_1B3[0x1]; // 0x1b3(0x01)
	struct FName ; // 0x1b4(0x04)
	struct FName ; // 0x1b8(0x04)
	int32_t ; // 0x1bc(0x04)
	struct FAnimNodeFunctionRef ; // 0x1c0(0x18)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x1d8(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x258(0x18)
};

// ScriptStruct Fortnite_M_Avg_Player_ZipLine_AnimBlueprint.Fortnite_M_Avg_Player_ZipLine_AnimBlueprint_C.AnimBlueprintGeneratedMutableData
// Size: 0x8c (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	bool __BoolProperty; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct TArray<float> ; // 0x08(0x10)
	bool ; // 0x18(0x01)
	char pad_19[0x7]; // 0x19(0x07)
	struct UAnimSequenceBase* ; // 0x20(0x08)
	char ; // 0x28(0x01)
	bool ; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
	struct TArray<float> ; // 0x30(0x10)
	bool ; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct UAnimSequenceBase* ; // 0x48(0x08)
	char ; // 0x50(0x01)
	bool ; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
	struct TArray<float> ; // 0x58(0x10)
	char ; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct TArray<float> ; // 0x70(0x10)
	char ; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float ; // 0x84(0x04)
	float ; // 0x88(0x04)
};

