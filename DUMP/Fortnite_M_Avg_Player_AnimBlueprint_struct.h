// ScriptStruct Fortnite_M_Avg_Player_AnimBlueprint.Fortnite_M_Avg_Player_AnimBlueprint_C.AnimBlueprintGeneratedConstantData
// Size: 0x748 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct FName ; // 0x08(0x04)
	struct FName ; // 0x0c(0x04)
	struct FName ; // 0x10(0x04)
	struct FName ; // 0x14(0x04)
	struct FName ; // 0x18(0x04)
	struct FName ; // 0x1c(0x04)
	struct FName ; // 0x20(0x04)
	struct FName ; // 0x24(0x04)
	struct FName ; // 0x28(0x04)
	struct FName ; // 0x2c(0x04)
	struct FName ; // 0x30(0x04)
	struct FName ; // 0x34(0x04)
	struct FName ; // 0x38(0x04)
	struct FName ; // 0x3c(0x04)
	struct FName ; // 0x40(0x04)
	struct FName ; // 0x44(0x04)
	float ; // 0x48(0x04)
	struct FName ; // 0x4c(0x04)
	float ; // 0x50(0x04)
	struct FName ; // 0x54(0x04)
	float ; // 0x58(0x04)
	struct FName ; // 0x5c(0x04)
	struct FName ; // 0x60(0x04)
	struct FName ; // 0x64(0x04)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct UAnimSequenceBase* ; // 0x78(0x08)
	struct FName ; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	float ; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	struct FName ; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UAnimSequenceBase* ; // 0xb0(0x08)
	struct UAnimSequenceBase* ; // 0xb8(0x08)
	struct UAnimSequenceBase* ; // 0xc0(0x08)
	struct TArray<float> ; // 0xc8(0x10)
	struct TArray<int32_t> ; // 0xd8(0x10)
	struct FName ; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAnimSequenceBase* ; // 0xf0(0x08)
	struct TArray<int32_t> ; // 0xf8(0x10)
	struct TArray<int32_t> ; // 0x108(0x10)
	struct TArray<float> ; // 0x118(0x10)
	struct TArray<int32_t> ; // 0x128(0x10)
	struct UAnimSequenceBase* ; // 0x138(0x08)
	struct UAnimSequenceBase* ; // 0x140(0x08)
	struct UAnimSequenceBase* ; // 0x148(0x08)
	struct UAnimSequenceBase* ; // 0x150(0x08)
	struct UAnimSequenceBase* ; // 0x158(0x08)
	struct TArray<float> ; // 0x160(0x10)
	struct TArray<int32_t> ; // 0x170(0x10)
	struct UAnimSequenceBase* ; // 0x180(0x08)
	struct UAnimSequenceBase* ; // 0x188(0x08)
	struct FName ; // 0x190(0x04)
	struct FName ; // 0x194(0x04)
	struct FName ; // 0x198(0x04)
	struct FName ; // 0x19c(0x04)
	struct FName ; // 0x1a0(0x04)
	struct FName ; // 0x1a4(0x04)
	struct FName ; // 0x1a8(0x04)
	struct FName ; // 0x1ac(0x04)
	struct FName ; // 0x1b0(0x04)
	struct FName ; // 0x1b4(0x04)
	struct FName ; // 0x1b8(0x04)
	struct FName ; // 0x1bc(0x04)
	struct FName ; // 0x1c0(0x04)
	char pad_1C4[0x4]; // 0x1c4(0x04)
	struct UBlendSpace* ; // 0x1c8(0x08)
	struct TArray<float> ; // 0x1d0(0x10)
	struct FName ; // 0x1e0(0x04)
	struct FName ; // 0x1e4(0x04)
	struct FName ; // 0x1e8(0x04)
	struct FName ; // 0x1ec(0x04)
	struct FName ; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	struct UAnimSequenceBase* ; // 0x1f8(0x08)
	struct UAnimSequenceBase* ; // 0x200(0x08)
	struct UAnimSequenceBase* ; // 0x208(0x08)
	struct UAnimSequenceBase* ; // 0x210(0x08)
	struct TArray<float> ; // 0x218(0x10)
	struct TArray<int32_t> ; // 0x228(0x10)
	struct UAnimSequenceBase* ; // 0x238(0x08)
	struct FName ; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct FAnimNodeFunctionRef ; // 0x248(0x18)
	struct FName ; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct FAnimNodeFunctionRef ; // 0x268(0x18)
	struct FName ; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UAnimSequenceBase* ; // 0x288(0x08)
	struct UAnimSequenceBase* ; // 0x290(0x08)
	struct FName ; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct UAnimSequenceBase* ; // 0x2a0(0x08)
	struct UAnimSequenceBase* ; // 0x2a8(0x08)
	struct UBlendSpace* ; // 0x2b0(0x08)
	struct FName ; // 0x2b8(0x04)
	struct FName ; // 0x2bc(0x04)
	struct FName ; // 0x2c0(0x04)
	struct FName ; // 0x2c4(0x04)
	struct FName ; // 0x2c8(0x04)
	struct FName ; // 0x2cc(0x04)
	struct UAnimSequenceBase* ; // 0x2d0(0x08)
	struct FName ; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct UAnimSequenceBase* ; // 0x2e0(0x08)
	struct FName ; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct UAnimSequenceBase* ; // 0x2f0(0x08)
	struct FName ; // 0x2f8(0x04)
	struct FName ; // 0x2fc(0x04)
	struct FName ; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
	struct UBlendSpace* ; // 0x308(0x08)
	struct UBlendSpace* ; // 0x310(0x08)
	struct TArray<float> ; // 0x318(0x10)
	struct TArray<int32_t> ; // 0x328(0x10)
	struct UBlendSpace* ; // 0x338(0x08)
	struct FName ; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct UAnimSequenceBase* ; // 0x348(0x08)
	struct FName ; // 0x350(0x04)
	struct FName ; // 0x354(0x04)
	struct FName ; // 0x358(0x04)
	struct FName ; // 0x35c(0x04)
	struct TArray<float> ; // 0x360(0x10)
	struct TArray<int32_t> ; // 0x370(0x10)
	struct FName ; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct TArray<float> ; // 0x388(0x10)
	enum class EAlphaBlendOption ; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)
	struct TArray<float> ; // 0x3a0(0x10)
	struct TArray<float> ; // 0x3b0(0x10)
	struct TArray<int32_t> ; // 0x3c0(0x10)
	struct UBlendSpace* ; // 0x3d0(0x08)
	struct UBlendSpace* ; // 0x3d8(0x08)
	struct FName ; // 0x3e0(0x04)
	char pad_3E4[0x4]; // 0x3e4(0x04)
	struct TArray<float> ; // 0x3e8(0x10)
	struct FName ; // 0x3f8(0x04)
	char pad_3FC[0x4]; // 0x3fc(0x04)
	struct UAnimSequenceBase* ; // 0x400(0x08)
	struct UAnimSequenceBase* ; // 0x408(0x08)
	struct UAnimSequenceBase* ; // 0x410(0x08)
	struct UAnimSequenceBase* ; // 0x418(0x08)
	struct TArray<float> ; // 0x420(0x10)
	struct TArray<int32_t> ; // 0x430(0x10)
	struct UAnimSequenceBase* ; // 0x440(0x08)
	struct FName ; // 0x448(0x04)
	struct FName ; // 0x44c(0x04)
	struct FName ; // 0x450(0x04)
	struct FName ; // 0x454(0x04)
	struct FName ; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct TArray<float> ; // 0x460(0x10)
	struct TArray<float> ; // 0x470(0x10)
	struct FName ; // 0x480(0x04)
	struct FName ; // 0x484(0x04)
	struct TArray<int32_t> ; // 0x488(0x10)
	enum class EAnimSyncMethod ; // 0x498(0x01)
	enum class EAnimGroupRole ; // 0x499(0x01)
	char pad_49A[0x2]; // 0x49a(0x02)
	struct FName ; // 0x49c(0x04)
	struct FName ; // 0x4a0(0x04)
	struct FName ; // 0x4a4(0x04)
	enum class ERefPoseType ; // 0x4a8(0x01)
	char pad_4A9[0x7]; // 0x4a9(0x07)
	struct UAnimSequenceBase* ; // 0x4b0(0x08)
	struct FName ; // 0x4b8(0x04)
	struct FName ; // 0x4bc(0x04)
	struct FName ; // 0x4c0(0x04)
	struct FName ; // 0x4c4(0x04)
	struct FName ; // 0x4c8(0x04)
	struct FName ; // 0x4cc(0x04)
	struct FName ; // 0x4d0(0x04)
	char pad_4D4[0x4]; // 0x4d4(0x04)
	struct TArray<float> ; // 0x4d8(0x10)
	struct FName ; // 0x4e8(0x04)
	struct FName ; // 0x4ec(0x04)
	int32_t ; // 0x4f0(0x04)
	char pad_4F4[0x4]; // 0x4f4(0x04)
	struct UAnimSequenceBase* ; // 0x4f8(0x08)
	struct FName ; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct UAnimSequenceBase* ; // 0x508(0x08)
	struct FName ; // 0x510(0x04)
	struct FName ; // 0x514(0x04)
	int32_t ; // 0x518(0x04)
	char pad_51C[0x4]; // 0x51c(0x04)
	struct UAnimSequenceBase* ; // 0x520(0x08)
	struct TArray<int32_t> ; // 0x528(0x10)
	struct UAnimSequenceBase* ; // 0x538(0x08)
	struct FName ; // 0x540(0x04)
	int32_t ; // 0x544(0x04)
	struct UAnimSequenceBase* ; // 0x548(0x08)
	struct FName ; // 0x550(0x04)
	int32_t ; // 0x554(0x04)
	struct FName ; // 0x558(0x04)
	int32_t ; // 0x55c(0x04)
	struct UAnimSequenceBase* ; // 0x560(0x08)
	struct FName ; // 0x568(0x04)
	struct FName ; // 0x56c(0x04)
	float ; // 0x570(0x04)
	struct FInputScaleBiasClampConstants ; // 0x574(0x2c)
	float ; // 0x5a0(0x04)
	enum class EAnimSyncMethod ; // 0x5a4(0x01)
	char pad_5A5[0x3]; // 0x5a5(0x03)
	struct FName ; // 0x5a8(0x04)
	int32_t ; // 0x5ac(0x04)
	struct FName ; // 0x5b0(0x04)
	int32_t ; // 0x5b4(0x04)
	bool ; // 0x5b8(0x01)
	enum class EBlendListTransitionType ; // 0x5b9(0x01)
	char pad_5BA[0x2]; // 0x5ba(0x02)
	struct FName ; // 0x5bc(0x04)
	struct TArray<float> ; // 0x5c0(0x10)
	struct TArray<float> ; // 0x5d0(0x10)
	enum class ERefPoseType ; // 0x5e0(0x01)
	char pad_5E1[0x7]; // 0x5e1(0x07)
	struct TArray<float> ; // 0x5e8(0x10)
	struct FName ; // 0x5f8(0x04)
	struct FName ; // 0x5fc(0x04)
	int32_t ; // 0x600(0x04)
	char pad_604[0x4]; // 0x604(0x04)
	struct UBlendProfile* ; // 0x608(0x08)
	struct UCurveFloat* ; // 0x610(0x08)
	bool ; // 0x618(0x01)
	enum class EAlphaBlendOption ; // 0x619(0x01)
	enum class EBlendListTransitionType ; // 0x61a(0x01)
	char pad_61B[0x5]; // 0x61b(0x05)
	struct TArray<float> ; // 0x620(0x10)
	struct FAnimNodeFunctionRef ; // 0x630(0x18)
	struct FAnimSubsystem_Tag AnimBlueprintExtension_Tag; // 0x648(0x60)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x6a8(0x80)
	struct FAnimSubsystem AnimBlueprintExtension_NodeRelevancy; // 0x728(0x08)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x730(0x18)
};

// ScriptStruct Fortnite_M_Avg_Player_AnimBlueprint.Fortnite_M_Avg_Player_AnimBlueprint_C.AnimBlueprintGeneratedMutableData
// Size: 0x571 (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	char pad_1[0x7]; // 0x01(0x07)
	struct UAnimSequenceBase* __AnimSequenceBase; // 0x08(0x08)
	bool ; // 0x10(0x01)
	char pad_11[0x7]; // 0x11(0x07)
	struct UAnimSequenceBase* ; // 0x18(0x08)
	bool ; // 0x20(0x01)
	char pad_21[0x7]; // 0x21(0x07)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	bool ; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	struct UAnimSequenceBase* ; // 0x40(0x08)
	bool ; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UAnimSequenceBase* ; // 0x50(0x08)
	struct TArray<float> ; // 0x58(0x10)
	bool ; // 0x68(0x01)
	bool ; // 0x69(0x01)
	bool ; // 0x6a(0x01)
	char ; // 0x6b(0x01)
	bool ; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct TArray<float> ; // 0x78(0x10)
	bool ; // 0x88(0x01)
	bool ; // 0x89(0x01)
	bool ; // 0x8a(0x01)
	char ; // 0x8b(0x01)
	float ; // 0x8c(0x04)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	bool ; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ; // 0x9c(0x04)
	float ; // 0xa0(0x04)
	bool ; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	float ; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct TArray<float> ; // 0xb0(0x10)
	bool ; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float ; // 0xc4(0x04)
	bool ; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	float ; // 0xcc(0x04)
	bool ; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float ; // 0xd4(0x04)
	char ; // 0xd8(0x01)
	bool ; // 0xd9(0x01)
	bool ; // 0xda(0x01)
	bool ; // 0xdb(0x01)
	char ; // 0xdc(0x01)
	char ; // 0xdd(0x01)
	char ; // 0xde(0x01)
	bool ; // 0xdf(0x01)
	struct TArray<float> ; // 0xe0(0x10)
	bool ; // 0xf0(0x01)
	char ; // 0xf1(0x01)
	bool ; // 0xf2(0x01)
	char ; // 0xf3(0x01)
	bool ; // 0xf4(0x01)
	char ; // 0xf5(0x01)
	bool ; // 0xf6(0x01)
	bool ; // 0xf7(0x01)
	bool ; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	float ; // 0xfc(0x04)
	bool ; // 0x100(0x01)
	bool ; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)
	struct UAnimSequenceBase* ; // 0x108(0x08)
	bool ; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct UAnimSequenceBase* ; // 0x118(0x08)
	struct UAnimSequenceBase* ; // 0x120(0x08)
	char ; // 0x128(0x01)
	bool ; // 0x129(0x01)
	char ; // 0x12a(0x01)
	char pad_12B[0x5]; // 0x12b(0x05)
	struct UAnimSequenceBase* ; // 0x130(0x08)
	struct TArray<float> ; // 0x138(0x10)
	bool ; // 0x148(0x01)
	bool ; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	float ; // 0x14c(0x04)
	float ; // 0x150(0x04)
	char ; // 0x154(0x01)
	char pad_155[0x3]; // 0x155(0x03)
	struct UAnimSequenceBase* ; // 0x158(0x08)
	struct TArray<float> ; // 0x160(0x10)
	bool ; // 0x170(0x01)
	bool ; // 0x171(0x01)
	char pad_172[0x2]; // 0x172(0x02)
	float ; // 0x174(0x04)
	float ; // 0x178(0x04)
	bool ; // 0x17c(0x01)
	char pad_17D[0x3]; // 0x17d(0x03)
	float ; // 0x180(0x04)
	float ; // 0x184(0x04)
	float ; // 0x188(0x04)
	float ; // 0x18c(0x04)
	bool ; // 0x190(0x01)
	char pad_191[0x3]; // 0x191(0x03)
	float ; // 0x194(0x04)
	float ; // 0x198(0x04)
	float ; // 0x19c(0x04)
	float ; // 0x1a0(0x04)
	char ; // 0x1a4(0x01)
	char pad_1A5[0x3]; // 0x1a5(0x03)
	float ; // 0x1a8(0x04)
	float ; // 0x1ac(0x04)
	bool ; // 0x1b0(0x01)
	bool ; // 0x1b1(0x01)
	char pad_1B2[0x6]; // 0x1b2(0x06)
	struct UBlendSpace* ; // 0x1b8(0x08)
	float ; // 0x1c0(0x04)
	float ; // 0x1c4(0x04)
	float ; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct UBlendSpace* ; // 0x1d0(0x08)
	float ; // 0x1d8(0x04)
	float ; // 0x1dc(0x04)
	float ; // 0x1e0(0x04)
	bool ; // 0x1e4(0x01)
	bool ; // 0x1e5(0x01)
	char pad_1E6[0x2]; // 0x1e6(0x02)
	struct UBlendSpace* ; // 0x1e8(0x08)
	float ; // 0x1f0(0x04)
	float ; // 0x1f4(0x04)
	float ; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct UBlendSpace* ; // 0x200(0x08)
	float ; // 0x208(0x04)
	float ; // 0x20c(0x04)
	float ; // 0x210(0x04)
	bool ; // 0x214(0x01)
	char pad_215[0x3]; // 0x215(0x03)
	struct UBlendSpace* ; // 0x218(0x08)
	float ; // 0x220(0x04)
	float ; // 0x224(0x04)
	float ; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct UBlendSpace* ; // 0x230(0x08)
	float ; // 0x238(0x04)
	float ; // 0x23c(0x04)
	float ; // 0x240(0x04)
	bool ; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	struct UBlendSpace* ; // 0x248(0x08)
	float ; // 0x250(0x04)
	float ; // 0x254(0x04)
	float ; // 0x258(0x04)
	bool ; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct UBlendSpace* ; // 0x260(0x08)
	float ; // 0x268(0x04)
	float ; // 0x26c(0x04)
	float ; // 0x270(0x04)
	char ; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	float ; // 0x278(0x04)
	float ; // 0x27c(0x04)
	float ; // 0x280(0x04)
	float ; // 0x284(0x04)
	bool ; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UBlendSpace* ; // 0x290(0x08)
	float ; // 0x298(0x04)
	float ; // 0x29c(0x04)
	float ; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UBlendSpace* ; // 0x2a8(0x08)
	float ; // 0x2b0(0x04)
	float ; // 0x2b4(0x04)
	float ; // 0x2b8(0x04)
	bool ; // 0x2bc(0x01)
	bool ; // 0x2bd(0x01)
	char pad_2BE[0x2]; // 0x2be(0x02)
	struct UBlendSpace* ; // 0x2c0(0x08)
	float ; // 0x2c8(0x04)
	float ; // 0x2cc(0x04)
	float ; // 0x2d0(0x04)
	bool ; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)
	struct UBlendSpace* ; // 0x2d8(0x08)
	float ; // 0x2e0(0x04)
	float ; // 0x2e4(0x04)
	float ; // 0x2e8(0x04)
	bool ; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	struct UBlendSpace* ; // 0x2f0(0x08)
	float ; // 0x2f8(0x04)
	float ; // 0x2fc(0x04)
	float ; // 0x300(0x04)
	bool ; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	struct UBlendSpace* ; // 0x308(0x08)
	float ; // 0x310(0x04)
	float ; // 0x314(0x04)
	float ; // 0x318(0x04)
	char ; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	float ; // 0x320(0x04)
	float ; // 0x324(0x04)
	float ; // 0x328(0x04)
	float ; // 0x32c(0x04)
	bool ; // 0x330(0x01)
	char pad_331[0x3]; // 0x331(0x03)
	float ; // 0x334(0x04)
	float ; // 0x338(0x04)
	float ; // 0x33c(0x04)
	float ; // 0x340(0x04)
	float ; // 0x344(0x04)
	float ; // 0x348(0x04)
	float ; // 0x34c(0x04)
	char ; // 0x350(0x01)
	char pad_351[0x3]; // 0x351(0x03)
	float ; // 0x354(0x04)
	struct TArray<float> ; // 0x358(0x10)
	char ; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	float ; // 0x36c(0x04)
	float ; // 0x370(0x04)
	char pad_374[0x4]; // 0x374(0x04)
	struct UAnimSequenceBase* ; // 0x378(0x08)
	float ; // 0x380(0x04)
	float ; // 0x384(0x04)
	struct UAnimSequenceBase* ; // 0x388(0x08)
	float ; // 0x390(0x04)
	float ; // 0x394(0x04)
	struct UAnimSequenceBase* ; // 0x398(0x08)
	float ; // 0x3a0(0x04)
	float ; // 0x3a4(0x04)
	struct UAnimSequenceBase* ; // 0x3a8(0x08)
	struct TArray<float> ; // 0x3b0(0x10)
	char ; // 0x3c0(0x01)
	char pad_3C1[0x3]; // 0x3c1(0x03)
	float ; // 0x3c4(0x04)
	struct UAnimSequenceBase* ; // 0x3c8(0x08)
	float ; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct UAnimSequenceBase* ; // 0x3d8(0x08)
	float ; // 0x3e0(0x04)
	char pad_3E4[0x4]; // 0x3e4(0x04)
	struct UAnimSequenceBase* ; // 0x3e8(0x08)
	float ; // 0x3f0(0x04)
	char pad_3F4[0x4]; // 0x3f4(0x04)
	struct UAnimSequenceBase* ; // 0x3f8(0x08)
	char ; // 0x400(0x01)
	char pad_401[0x7]; // 0x401(0x07)
	struct UAnimSequenceBase* ; // 0x408(0x08)
	bool ; // 0x410(0x01)
	char pad_411[0x7]; // 0x411(0x07)
	struct UAnimSequenceBase* ; // 0x418(0x08)
	struct UAnimSequenceBase* ; // 0x420(0x08)
	struct UAnimSequenceBase* ; // 0x428(0x08)
	struct UAnimSequenceBase* ; // 0x430(0x08)
	struct TArray<float> ; // 0x438(0x10)
	char ; // 0x448(0x01)
	char pad_449[0x7]; // 0x449(0x07)
	struct UAnimSequenceBase* ; // 0x450(0x08)
	float ; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct UAnimSequenceBase* ; // 0x460(0x08)
	float ; // 0x468(0x04)
	char pad_46C[0x4]; // 0x46c(0x04)
	struct UAnimSequenceBase* ; // 0x470(0x08)
	float ; // 0x478(0x04)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct UAnimSequenceBase* ; // 0x480(0x08)
	float ; // 0x488(0x04)
	char pad_48C[0x4]; // 0x48c(0x04)
	struct UAnimSequenceBase* ; // 0x490(0x08)
	struct UAnimSequenceBase* ; // 0x498(0x08)
	struct UAnimSequenceBase* ; // 0x4a0(0x08)
	bool ; // 0x4a8(0x01)
	bool ; // 0x4a9(0x01)
	bool ; // 0x4aa(0x01)
	char pad_4AB[0x5]; // 0x4ab(0x05)
	struct UAnimSequenceBase* ; // 0x4b0(0x08)
	struct UAnimSequenceBase* ; // 0x4b8(0x08)
	struct UAnimSequenceBase* ; // 0x4c0(0x08)
	struct TArray<float> ; // 0x4c8(0x10)
	bool ; // 0x4d8(0x01)
	bool ; // 0x4d9(0x01)
	char pad_4DA[0x6]; // 0x4da(0x06)
	struct UAnimSequenceBase* ; // 0x4e0(0x08)
	struct UAnimSequenceBase* ; // 0x4e8(0x08)
	bool ; // 0x4f0(0x01)
	char ; // 0x4f1(0x01)
	char pad_4F2[0x6]; // 0x4f2(0x06)
	struct UAnimSequenceBase* ; // 0x4f8(0x08)
	struct UBlendSpace* ; // 0x500(0x08)
	float ; // 0x508(0x04)
	float ; // 0x50c(0x04)
	struct TArray<float> ; // 0x510(0x10)
	bool ; // 0x520(0x01)
	bool ; // 0x521(0x01)
	char pad_522[0x6]; // 0x522(0x06)
	struct UBlendSpace* ; // 0x528(0x08)
	float ; // 0x530(0x04)
	float ; // 0x534(0x04)
	struct UBlendSpace* ; // 0x538(0x08)
	float ; // 0x540(0x04)
	float ; // 0x544(0x04)
	bool ; // 0x548(0x01)
	char ; // 0x549(0x01)
	char pad_54A[0x6]; // 0x54a(0x06)
	struct UAnimSequenceBase* ; // 0x550(0x08)
	struct TArray<float> ; // 0x558(0x10)
	bool ; // 0x568(0x01)
	bool ; // 0x569(0x01)
	bool ; // 0x56a(0x01)
	bool ; // 0x56b(0x01)
	int32_t ; // 0x56c(0x04)
	bool ; // 0x570(0x01)
};

