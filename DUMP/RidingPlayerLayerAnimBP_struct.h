// ScriptStruct RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.AnimBlueprintGeneratedConstantData
// Size: 0x180 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct UAnimSequenceBase* ; // 0x08(0x08)
	struct UBlendSpace* ; // 0x10(0x08)
	struct UBlendSpace* ; // 0x18(0x08)
	struct FName ; // 0x20(0x04)
	char pad_24[0x4]; // 0x24(0x04)
	struct UAnimSequenceBase* ; // 0x28(0x08)
	struct UBlendSpace* ; // 0x30(0x08)
	struct UAnimSequenceBase* ; // 0x38(0x08)
	struct FInputScaleBiasClampConstants ; // 0x40(0x2c)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct UAnimSequenceBase* ; // 0x70(0x08)
	struct UBlendProfile* ; // 0x78(0x08)
	struct UCurveFloat* ; // 0x80(0x08)
	enum class EAlphaBlendOption ; // 0x88(0x01)
	enum class EBlendListTransitionType ; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct TArray<float> ; // 0x90(0x10)
	struct UBlendSpace* ; // 0xa0(0x08)
	bool ; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	float ; // 0xac(0x04)
	float ; // 0xb0(0x04)
	bool ; // 0xb4(0x01)
	enum class EAnimSyncMethod ; // 0xb5(0x01)
	enum class EAnimGroupRole ; // 0xb6(0x01)
	char pad_B7[0x1]; // 0xb7(0x01)
	struct FName ; // 0xb8(0x04)
	struct FName ; // 0xbc(0x04)
	struct FName ; // 0xc0(0x04)
	struct FName ; // 0xc4(0x04)
	struct FAnimNodeFunctionRef ; // 0xc8(0x18)
	struct FName ; // 0xe0(0x04)
	struct FName ; // 0xe4(0x04)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0xe8(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x168(0x18)
};

// ScriptStruct RidingPlayerLayerAnimBP.RidingPlayerLayerAnimBP_C.AnimBlueprintGeneratedMutableData
// Size: 0x1c (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	bool __BoolProperty; // 0x01(0x01)
	char pad_2[0x2]; // 0x02(0x02)
	float ; // 0x04(0x04)
	float ; // 0x08(0x04)
	bool ; // 0x0c(0x01)
	bool ; // 0x0d(0x01)
	bool ; // 0x0e(0x01)
	char pad_F[0x1]; // 0x0f(0x01)
	float ; // 0x10(0x04)
	bool ; // 0x14(0x01)
	bool ; // 0x15(0x01)
	bool ; // 0x16(0x01)
	bool ; // 0x17(0x01)
	float ; // 0x18(0x04)
};

