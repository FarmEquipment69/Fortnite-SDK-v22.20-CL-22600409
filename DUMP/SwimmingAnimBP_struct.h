// ScriptStruct SwimmingAnimBP.SwimmingAnimBP_C.AnimBlueprintGeneratedConstantData
// Size: 0x368 (Inherited: 0x01)
struct FAnimBlueprintGeneratedConstantData : FAnimBlueprintConstantData {
	char pad_1[0x3]; // 0x01(0x03)
	struct FName ; // 0x04(0x04)
	struct TArray<int32_t> ; // 0x08(0x10)
	struct FName ; // 0x18(0x04)
	char pad_1C[0x4]; // 0x1c(0x04)
	struct UBlendSpace* ; // 0x20(0x08)
	struct UBlendSpace* ; // 0x28(0x08)
	struct UAnimSequenceBase* ; // 0x30(0x08)
	struct FAnimNodeFunctionRef ; // 0x38(0x18)
	struct FName ; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UAnimSequenceBase* ; // 0x58(0x08)
	struct FName ; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UAnimSequenceBase* ; // 0x68(0x08)
	struct FName ; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct UAnimSequenceBase* ; // 0x78(0x08)
	struct FName ; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	struct FName ; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	struct TArray<float> ; // 0xa8(0x10)
	struct UAnimSequenceBase* ; // 0xb8(0x08)
	struct FName ; // 0xc0(0x04)
	struct FName ; // 0xc4(0x04)
	struct UBlendSpace* ; // 0xc8(0x08)
	float ; // 0xd0(0x04)
	struct FName ; // 0xd4(0x04)
	float ; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UAnimSequenceBase* ; // 0xe0(0x08)
	struct FName ; // 0xe8(0x04)
	struct FName ; // 0xec(0x04)
	struct UAnimSequenceBase* ; // 0xf0(0x08)
	struct FName ; // 0xf8(0x04)
	struct FName ; // 0xfc(0x04)
	struct FName ; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct UBlendSpace* ; // 0x108(0x08)
	struct FName ; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UBlendSpace* ; // 0x118(0x08)
	struct UBlendSpace* ; // 0x120(0x08)
	struct FName ; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)
	struct UBlendSpace* ; // 0x130(0x08)
	struct TArray<float> ; // 0x138(0x10)
	struct TArray<int32_t> ; // 0x148(0x10)
	struct UBlendSpace* ; // 0x158(0x08)
	struct FName ; // 0x160(0x04)
	struct FName ; // 0x164(0x04)
	struct UAnimSequenceBase* ; // 0x168(0x08)
	struct FName ; // 0x170(0x04)
	struct FName ; // 0x174(0x04)
	struct UBlendSpace* ; // 0x178(0x08)
	struct UBlendSpace* ; // 0x180(0x08)
	struct FName ; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct UAnimSequenceBase* ; // 0x190(0x08)
	struct FName ; // 0x198(0x04)
	struct FName ; // 0x19c(0x04)
	struct UBlendSpace* ; // 0x1a0(0x08)
	struct FName ; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct UAnimSequenceBase* ; // 0x1b0(0x08)
	struct FName ; // 0x1b8(0x04)
	struct FName ; // 0x1bc(0x04)
	int32_t ; // 0x1c0(0x04)
	struct FName ; // 0x1c4(0x04)
	int32_t ; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct UAnimSequenceBase* ; // 0x1d0(0x08)
	struct FName ; // 0x1d8(0x04)
	struct FName ; // 0x1dc(0x04)
	int32_t ; // 0x1e0(0x04)
	enum class EBlendListTransitionType ; // 0x1e4(0x01)
	char pad_1E5[0x3]; // 0x1e5(0x03)
	struct TArray<float> ; // 0x1e8(0x10)
	struct UAnimSequenceBase* ; // 0x1f8(0x08)
	struct FInputScaleBiasClampConstants ; // 0x200(0x2c)
	struct FName ; // 0x22c(0x04)
	struct FName ; // 0x230(0x04)
	int32_t ; // 0x234(0x04)
	struct TArray<float> ; // 0x238(0x10)
	float ; // 0x248(0x04)
	struct FName ; // 0x24c(0x04)
	struct UBlendSpace* ; // 0x250(0x08)
	float ; // 0x258(0x04)
	enum class EAnimSyncMethod ; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FName ; // 0x260(0x04)
	struct FName ; // 0x264(0x04)
	int32_t ; // 0x268(0x04)
	enum class ERefPoseType ; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	struct FName ; // 0x270(0x04)
	struct FName ; // 0x274(0x04)
	enum class ESequenceEvalReinit ; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float ; // 0x27c(0x04)
	enum class EAnimSyncMethod ; // 0x280(0x01)
	enum class EAnimGroupRole ; // 0x281(0x01)
	bool ; // 0x282(0x01)
	char pad_283[0x5]; // 0x283(0x05)
	struct UBlendProfile* ; // 0x288(0x08)
	struct UCurveFloat* ; // 0x290(0x08)
	bool ; // 0x298(0x01)
	enum class EAlphaBlendOption ; // 0x299(0x01)
	enum class EBlendListTransitionType ; // 0x29a(0x01)
	char pad_29B[0x5]; // 0x29b(0x05)
	struct TArray<float> ; // 0x2a0(0x10)
	struct FAnimNodeFunctionRef ; // 0x2b0(0x18)
	struct FName ; // 0x2c8(0x04)
	struct FName ; // 0x2cc(0x04)
	struct FAnimSubsystem_PropertyAccess AnimBlueprintExtension_PropertyAccess; // 0x2d0(0x80)
	struct FAnimSubsystem_Base AnimBlueprintExtension_Base; // 0x350(0x18)
};

// ScriptStruct SwimmingAnimBP.SwimmingAnimBP_C.AnimBlueprintGeneratedMutableData
// Size: 0x102 (Inherited: 0x01)
struct FAnimBlueprintGeneratedMutableData : FAnimBlueprintMutableData {
	bool __BoolProperty; // 0x01(0x01)
	char pad_2[0x6]; // 0x02(0x06)
	struct UBlendSpace* ; // 0x08(0x08)
	float ; // 0x10(0x04)
	char ; // 0x14(0x01)
	char pad_15[0x3]; // 0x15(0x03)
	float ; // 0x18(0x04)
	float ; // 0x1c(0x04)
	float ; // 0x20(0x04)
	bool ; // 0x24(0x01)
	char ; // 0x25(0x01)
	bool ; // 0x26(0x01)
	char pad_27[0x1]; // 0x27(0x01)
	float ; // 0x28(0x04)
	bool ; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float ; // 0x30(0x04)
	float ; // 0x34(0x04)
	float ; // 0x38(0x04)
	float ; // 0x3c(0x04)
	char ; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float ; // 0x44(0x04)
	float ; // 0x48(0x04)
	char ; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	float ; // 0x50(0x04)
	float ; // 0x54(0x04)
	float ; // 0x58(0x04)
	float ; // 0x5c(0x04)
	float ; // 0x60(0x04)
	bool ; // 0x64(0x01)
	bool ; // 0x65(0x01)
	char pad_66[0x2]; // 0x66(0x02)
	float ; // 0x68(0x04)
	float ; // 0x6c(0x04)
	bool ; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct UBlendSpace* ; // 0x78(0x08)
	float ; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAnimSequenceBase* ; // 0x88(0x08)
	struct UAnimSequenceBase* ; // 0x90(0x08)
	bool ; // 0x98(0x01)
	bool ; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
	struct UAnimSequenceBase* ; // 0xa0(0x08)
	bool ; // 0xa8(0x01)
	bool ; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)
	struct UAnimSequenceBase* ; // 0xb0(0x08)
	struct UBlendSpace* ; // 0xb8(0x08)
	float ; // 0xc0(0x04)
	bool ; // 0xc4(0x01)
	bool ; // 0xc5(0x01)
	char pad_C6[0x2]; // 0xc6(0x02)
	struct UBlendSpace* ; // 0xc8(0x08)
	float ; // 0xd0(0x04)
	float ; // 0xd4(0x04)
	float ; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UAnimSequenceBase* ; // 0xe0(0x08)
	struct UAnimSequenceBase* ; // 0xe8(0x08)
	struct TArray<float> ; // 0xf0(0x10)
	bool ; // 0x100(0x01)
	bool ; // 0x101(0x01)
};

